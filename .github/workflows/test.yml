name: Test

on: [push, pull_request]

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
    lint-js-css:
        name: Lint JS & CSS
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                cache: 'npm'
                node-version-file: '.nvmrc'

            - name: Install NPM dependencies
              run: npm install

            - name: Lint JS
              run: npm run lint:js

            - name: Lint CSS
              run: npm run lint:css

    lint-php-and-compatibility:
        name: Lint PHP & PHP Compatibility checks.
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup PHP and Composer
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.2'

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                cache: 'npm'
                node-version-file: '.nvmrc'

            - name: Install NPM dependencies
              run: npm install

            - name: Lint PHP
              run: npm run lint:php || true # Ignore for now.

            - name: Lint PHP Compatibility
              run: composer lint-compat

    test-php:
        name: Test PHP ${{ matrix.php }} ${{ matrix.wp != '' && format( ' (WP {0}) ', matrix.wp ) || '' }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php:
                  - '8.3'
                  - '8.2'
                  - '8.1'
                  - '8.0'
                  - '7.4'
                  - '7.3'
                  - '7.2'
                wp:
                  - latest
                  - trunk
                  - '6.3'
        env:
            WP_ENV_PHP_VERSION: ${{ matrix.php }}
            WP_ENV_CORE: ${{ matrix.wp == 'trunk' && 'WordPress/WordPress' || format( 'https://wordpress.org/wordpress-{0}.zip', matrix.wp ) }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.2'

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                cache: 'npm'
                node-version-file: '.nvmrc'

            - name: Install NPM dependencies
              run: npm install

            - name: Start the Docker testing environment
              uses: nick-fields/retry@v3
              with:
                timeout_minutes: 10
                max_attempts: 3
                command: npm run env start

            - name: Composer install
              run: |
                rm composer.lock || true # We need to install fresh.
                npm run composer install

            - name: Versions
              run: |
                npm run env run cli php -- -v
                npm run env run cli wp core version

            - name: Test
              run: npm run test

    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.2'

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                cache: 'npm'
                node-version-file: '.nvmrc'

            - name: Install NPM dependencies
              run: npm install

            - name: Build
              run: npm run build
